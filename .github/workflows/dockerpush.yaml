name: Deploy to EC2
on:
  push:
   branches:
    - main
jobs:
  deploy:
   runs-on: ubuntu-latest
   steps:
    - name: Checkout Code
      uses: actions/checkout@v2
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
        
    - name: Login to Amazon ECR
      id: login-ecr 
      run: |
        echo ${{ secrets.ECR_ACCESS_TOKEN }} | docker login - u AWS --passsword-stdin 073449301057.dkr.ecr.us-east-1.amazonaws.com/meter_ocr
#       uses: aws-actions/amazon-ecr-login@v1
      
#       with:
#         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}	      
#         account_id: ${{ secrets.AWS_ACCOUNT_ID }}
#        
#         aws-region: ${{ secrets.AWS_REGION }}
#         tags: latest
    - name: Build Docker Images
      run: docker-compose build
    - name: Push Images
      run: docker-compose push 
      env:
        registry: ${{ secrets.AWS_ACCOUNT_NUMBER }}.dkr.ecr.us-east-1.amazonaws.com
        username: ${{ secrets.AWS_ACCESS_KEY_ID }}
        password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: meter_ocr

  # - name: Build and Push Docker Images
  #   run: |

  #     docker-compose build
  #     docker-compose tag your_service_name:latest your_ecr_repository/your_service_name:latest
  #     # Log in to Amazon ECR if you are using a private ECR repository
  #     # docker login -u AWS -p $(aws ecr get-login-password --region your_region) your_ecr_repository

  # - name: Create Docker Compose File
  #   run: |
  #     # Save the Docker Compose file to a temporary location
  #     cp docker-compose.yml /tmp/docker-compose.yml
  #     # Replace "your_service_name" with the name of your service in the Docker Compose file
  #     sed -i 's/your_service_name/your_ecr_repository\/your_service_name/g' /tmp/docker-compose.yml

  # - name: Copy Docker Compose File to EC2
  #   uses: appleboy/scp-action@master
  #   with:
  #     host: ${{ secrets.EC2_HOST }} # EC2 instance public IP or DNS name
  #     username: ${{ secrets.EC2_USERNAME }} # EC2 instance username
  #     key: ${{ secrets.EC2_SSH_KEY }} # Private key to authenticate to EC2

  #   # Copy the Docker Compose file to the EC2 instance
  #   args:
  #   src: /tmp/docker-compose.yml
  #   dest: /home/ec2-user/docker-compose.yml

  # - name: SSH into EC2 and Deploy
  #   uses: appleboy/ssh-action@master
  #   with:
  #     host: ${{ secrets.EC2_HOST }}
  #     username: ${{ secrets.EC2_USERNAME }}
  #     key: ${{ secrets.EC2_SSH_KEY }}

  #   # Run Docker Compose up on the EC2 instance
  #   args: sudo docker-compose -f /home/ec2-user/docker-compose.yml up -d
