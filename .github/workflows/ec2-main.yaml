name: Push Docker image to ECR
on:
  push:
    branches:
      - main
jobs:
  build:
    name: Build Image
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Build and Push Docker Images
        run: |
          docker-compose build
          docker-compose tag src1:src1 meter-ocr/scr2:src2
         
      - name: Create Docker Compose File
        run: |
          # Save the Docker Compose file to a temporary location
          cp docker-compose.yml /tmp/docker-compose.yml
          # Replace "your_service_name" with the name of your service in the Docker Compose file
          sed -i 's/src1/meter-ocr\/src2/g' /tmp/docker-compose.yml
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Copy Docker Compose File to EC2
        uses: appleboy/scp-action@master
        with:
          REMOTE_HOST: ${{ secrets.EC2_HOST }} # EC2 instance public IP or DNS name
          REMOTE_USER: ${{ secrets.EC2_USERNAME }} # EC2 instance username
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }} # Private key to authenticate to EC2
#   deploy:
#     runs-on: ubuntu-latest
#     needs: [build]
#     steps:
#       - name: Deploy to EC2
#         uses: easingthemes/ssh-deploy@v2.1.5
#         with:
#          SSH_PRIVATE_KEY: ${{secrets.SSH_PRIVATE_KEY}}
#          REMOTE_HOST: ${{secrets.REMOTE_HOST}}
#          REMOTE_USER: ${{secrets.REMOTE_USER}}
         
